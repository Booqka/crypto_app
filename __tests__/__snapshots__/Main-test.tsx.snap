// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "margin": 16,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "marginBottom": 15,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "grey",
          "borderRadius": 5,
          "color": "white",
          "marginBottom": 15,
          "opacity": 1,
          "padding": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        Open Filters
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "marginBottom": 15,
      }
    }
  >
    <View
      style={
        Object {
          "marginBottom": 10,
          "width": "100%",
        }
      }
    >
      <TextInput
        defaultValue=""
        onChangeText={[Function]}
        style={
          Object {
            "borderColor": "#CECECE",
            "borderRadius": 3,
            "borderWidth": 1,
            "padding": 12,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 20,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
          }
        }
      >
        1
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        2
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        3
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        4
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        5
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        6
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "grey",
          "borderColor": "grey",
          "borderRadius": 10,
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "center",
          "marginHorizontal": 5,
          "opacity": 1,
          "paddingVertical": 10,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "white",
          }
        }
      >
        7
      </Text>
    </View>
  </View>
  <ActivityIndicator
    size="large"
  />
</RCTSafeAreaView>
`;
